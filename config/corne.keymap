/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp F  &kp P         &kp B          &kp J            &kp L            &kp U      &kp Y    &kp SEMICOLON  &kp BSPC
&mo 3       &kp A  &kp R  &kp S  &kp T         &kp G          &kp M            &kp N            &kp E      &kp I    &kp O          &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C  &kp D         &kp V          &kp K            &kp H            &kp COMMA  &kp DOT  &kp FSLH       &kp ENTER
                          &mo 4  &kp LEFT_GUI  &lt 1 SPACE    &lt 2 BACKSPACE  &sk RIGHT_SHIFT  &kp RALT
            >;
        };

        function_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp LG(LC(Q))  &trans     &kp LG(MINUS)  &kp LG(PLUS)  &kp LG(LS(NUMBER_4))    &kp C_PLAY_PAUSE   &kp RG(LEFT_ARROW)  &kp UP_ARROW    &kp RG(RIGHT_ARROW)  &kp N0  &kp BSPC
&trans   &trans         &trans     &trans         &mo 2         &trans                  &kp C_AC_SEARCH    &kp RA(LEFT_ARROW)  &kp DOWN_ARROW  &kp RA(RIGHT)        &trans  &trans
&trans   &kp LG(Z)      &kp LG(X)  &kp LG(C)      &kp LG(D)     &kp LG(V)               &trans             &trans              &trans          &trans               &trans  &kp RS(RETURN)
                                   &trans         &trans        &trans                  &kp RA(BACKSPACE)  &kp C_MUTE          &trans
            >;
        };

        navigation_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LG(LS(V))  &kp DOLLAR  &kp HASH   &kp AT_SIGN           &kp AMPERSAND          &kp PRCNT          &trans                &kp RC(LEFT_ARROW)  &kp UP_ARROW    &kp RC(RIGHT_ARROW)  &kp RPAR   &kp BSPC
&trans         &trans      &kp COLON  &kp EQUAL             &kp RIGHT_PARENTHESIS  &kp QUESTION       &trans                &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp COLON  &kp DOUBLE_QUOTES
&trans         &trans      &trans     &trans                &trans                 &kp EXCLAMATION    &kp NON_US_BACKSLASH  &kp PLUS            &kp MINUS       &kp ASTERISK         &kp SLASH  &kp RS(RETURN)
                                      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans             &trans                &trans              &trans
            >;
        };

        number_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp PERCENT    &kp N7        &kp N8        &kp N9        &kp ASTERISK  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp COMMA     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PLUS       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH     &kp EQUAL
                        &trans  &trans  &trans    &kp BACKSPACE  &kp N0        &kp PERIOD
            >;
        };

        RGB_layer {
            bindings = <
&rgb_ug RGB_TOG  &kp C_BRIGHTNESS_DEC  &kp C_BRI_INC    &kp C_AC_SEARCH  &trans           &trans             &trans  &trans          &trans           &trans  &trans  &trans
&rgb_ug RGB_HUD  &rgb_ug RGB_HUI       &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF    &trans  &rgb_ug RGB_ON  &rgb_ug RGB_OFF  &trans  &trans  &trans
&trans           &trans                &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI    &trans  &trans          &trans           &trans  &trans  &trans
                                                        &trans           &trans           &trans             &trans  &trans          &trans
            >;
        };
    };
};
